%import common.WS
%import common.DIGIT
%import common.CNAME
%import common.NUMBER
%import common.ESCAPED_STRING
%import common.FLOAT
%import common.LETTER

LITERAL: NUMBER | ESCAPED_STRING | "true" | "false" | "'" /./ "'"
IDENTIFIER: CNAME


let_stmt: "let" IDENTIFIER IDENTIFIER "=" expr ";"
mut_stmt: "mut" IDENTIFIER "=" expr ";"
print_stmt: "print" expr ";"
!noop_stmt: "noop" ";"
!return_stmt: "return" expr ";"

!?sum_expr:  sum_expr "+" prod_expr
        | sum_expr "-" prod_expr
        | prod_expr

!?prod_expr: prod_expr "*" cast_expr
    | prod_expr "/" cast_expr
    | prod_expr "%" cast_expr
    | cast_expr

?cast_expr: "cast<" IDENTIFIER ">" primary
        | primary

?primary: LITERAL
        | "-" primary  -> unary_minus
        | "!" primary  -> unary_negation
        | IDENTIFIER -> read_var
        | "(" sum_expr ")"

!expr: sum_expr | LITERAL


?statement: print_stmt | let_stmt | mut_stmt | noop_stmt | return_stmt
!block: "{" statement* "}"

program: block


%ignore WS
